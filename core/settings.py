"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os, random, string
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()  # take environment variables from .env.

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')
if not SECRET_KEY:
    SECRET_KEY = ''.join(random.choice( string.ascii_lowercase  ) for i in range( 32 ))

# Función para manejar DEBUG dinámicamente
def str2bool(v):
    if isinstance(v, bool):
        return v
    if v.lower() in ('yes', 'true', 't', 'y', '1'):
        return True
    elif v.lower() in ('no', 'false', 'f', 'n', '0'):
        return False
    else:
        raise ValueError('Boolean value expected.')

# Enable/Disable DEBUG Mode
DEBUG = True #str2bool(os.environ.get('DEBUG'))


print("DEBUG -> " + str(DEBUG))

# Docker HOST
ALLOWED_HOSTS = [
    '149.50.141.70', 
    'gryphos.cl',
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
    '*'
]

# Add here your deployment HOSTS
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8000', 
    'http://localhost:5085', 
    'http://127.0.0.1:8000', 
    'http://127.0.0.1:5085',
    'http://localhost',
    'http://127.0.0.1',
    'https://gryphos.cl',
    'http://gryphos.cl'
]

RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:    
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

#Seguridad de ambiente


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "home",
    'theme_material_kit',
]

MIDDLEWARE = [
    "core.middleware.FixHostHeaderMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

HOME_TEMPLATES = os.path.join(BASE_DIR, 'home', 'templates')

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [HOME_TEMPLATES],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DB_ENGINE   = os.getenv('DB_ENGINE'   , None)
DB_USERNAME = os.getenv('DB_USERNAME' , None)
DB_PASS     = os.getenv('DB_PASS'     , None)
DB_HOST     = os.getenv('DB_HOST'     , None)
DB_PORT     = os.getenv('DB_PORT'     , None)
DB_NAME     = os.getenv('DB_NAME'     , None)

if DB_ENGINE and DB_NAME and DB_USERNAME:
    DATABASES = { 
      'default': {
        'ENGINE'  : DB_ENGINE,
        'NAME'    : DB_NAME,
        'USER'    : DB_USERNAME,
        'PASSWORD': DB_PASS,
        'HOST'    : DB_HOST,
        'PORT'    : DB_PORT,
        'OPTIONS' : {
            'options': '-c search_path=public'
        }}}
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'db.postgresql',}}


AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},]

LANGUAGE_CODE = "es-cl"

TIME_ZONE = 'America/Santiago'

USE_I18N = True
USE_L10N = True
USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [BASE_DIR / "static"]

# Opción 1: Storage más permisivo
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# O Opción 2: Storage básico sin compresión
# STATICFILES_STORAGE = 'whitenoise.storage.StaticFilesStorage'

# Configuraciones para ignorar errores de archivos faltantes
WHITENOISE_MANIFEST_STRICT = False
WHITENOISE_IGNORE_PATTERNS = [
    '*.svg',
    'img/*.svg',
    'css/*.svg',
]

# Configuración adicional para desarrollo
if DEBUG:
    WHITENOISE_USE_FINDERS = True
    WHITENOISE_AUTOREFRESH = True

# Configuración para ignorar archivos problemáticos
STATICFILES_IGNORE_PATTERNS = [
    '*.svg',
    'img/*.svg',
    'css/*.svg',
    'icon-*.svg',
    'selector-icons.svg',
    'icon-addlink.svg',
    'search.svg',
    'icon-clock.svg',
    'icon-calendar.svg',
    'calendar-icons.svg',
    'inline-delete.svg',
    'icon-unknown.svg',
    'icon-unknown-alt.svg',
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/portal-cliente/'
# Configuración de Email
if DEBUG:
    # Para desarrollo - muestra correos en consola
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    DEFAULT_FROM_EMAIL = 'contacto@gryphos.cl'
else:
    # Para producción - configuración SMTP real
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'mail.gryphos.cl'  # o tu servidor SMTP
    EMAIL_PORT = 2587
    EMAIL_USE_TLS = True
    EMAIL_USE_SSL = False
    EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'contacto@gryphos.cl')
    EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')  # Contraseña de aplicación
    DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
    SERVER_EMAIL = EMAIL_HOST_USER
AUTH_USER_MODEL = 'home.CustomUser'


# Configuraciones de seguridad para producción
if not DEBUG:
    # Configuraciones de seguridad HTTPS
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_SECONDS = 31536000  # 1 año
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    # Configuraciones de cookies seguras
    SESSION_COOKIE_SECURE = False  # Cambiar a True si usas HTTPS
    CSRF_COOKIE_SECURE = False     # Cambiar a True si usas HTTPS
    
    # Configuración de X-Frame-Options
    X_FRAME_OPTIONS = 'DENY'
    
    # Configuración de referrer policy
    SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'
