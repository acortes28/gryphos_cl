# Generated by Django 4.2.9 on 2025-07-27 05:27

from django.db import migrations, models


def convert_fecha_limite_to_days(apps, schema_editor):
    """
    Convierte las fechas límite de pago a días de plazo.
    Si no hay fecha límite, establece 30 días por defecto.
    """
    from django.utils import timezone
    from datetime import date
    
    Curso = apps.get_model('home', 'Curso')
    
    for curso in Curso.objects.all():
        if curso.fecha_limite_pago:
            # Calcular días desde hoy hasta la fecha límite
            hoy = date.today()
            dias_restantes = (curso.fecha_limite_pago - hoy).days
            # Si ya pasó la fecha, establecer 0 días
            curso.fecha_limite_pago_days = max(0, dias_restantes)
        else:
            # Si no hay fecha límite, establecer 30 días por defecto
            curso.fecha_limite_pago_days = 30
        curso.save()


def reverse_convert_days_to_fecha_limite(apps, schema_editor):
    """
    Convierte los días de plazo de vuelta a fechas límite.
    """
    from datetime import date, timedelta
    
    Curso = apps.get_model('home', 'Curso')
    
    for curso in Curso.objects.all():
        if hasattr(curso, 'fecha_limite_pago_days') and curso.fecha_limite_pago_days:
            # Calcular fecha límite sumando días a hoy
            hoy = date.today()
            fecha_limite = hoy + timedelta(days=curso.fecha_limite_pago_days)
            curso.fecha_limite_pago = fecha_limite
        else:
            # Si no hay días, establecer 30 días por defecto
            curso.fecha_limite_pago = date.today() + timedelta(days=30)
        curso.save()


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0011_alter_curso_precio'),
    ]

    operations = [
        # 1. Agregar el nuevo campo IntegerField
        migrations.AddField(
            model_name='curso',
            name='fecha_limite_pago_days',
            field=models.IntegerField(
                default=30,
                help_text='Días de plazo para realizar el pago'
            ),
        ),
        
        # 2. Ejecutar la función de conversión
        migrations.RunPython(
            convert_fecha_limite_to_days,
            reverse_convert_days_to_fecha_limite,
        ),
        
        # 3. Eliminar el campo DateField original
        migrations.RemoveField(
            model_name='curso',
            name='fecha_limite_pago',
        ),
        
        # 4. Renombrar el nuevo campo al nombre original
        migrations.RenameField(
            model_name='curso',
            old_name='fecha_limite_pago_days',
            new_name='fecha_limite_pago',
        ),
    ]
